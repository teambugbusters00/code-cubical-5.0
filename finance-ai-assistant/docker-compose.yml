version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-demo}
      - NEWS_API_KEY=${NEWS_API_KEY:-demo}
      - RAPIDAPI_KEY=${RAPIDAPI_KEY:-demo}
      - ENABLE_REAL_TIME_UPDATES=true
      - ENABLE_TECHNICAL_ANALYSIS=true
      - ENABLE_NEWS_INTEGRATION=true
      - ENABLE_REDIS_CACHE=true
      - DATA_REFRESH_INTERVAL=30
      - MAX_RETRIES=3
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    networks:
      - finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ../stitch_finance_chatbot
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Pathway Data Processing
  pathway:
    build:
      context: .
      dockerfile: Dockerfile.pathway
    ports:
      - "8765:8765"
    environment:
      - PATHWAY_HOST=0.0.0.0
      - PATHWAY_PORT=8765
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - finance-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - finance-network

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=finance_db
      - POSTGRES_USER=finance_user
      - POSTGRES_PASSWORD=finance_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - finance-network

  # MongoDB database
  mongodb:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_DATABASE=finance_ai_assistant
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - finance-network

volumes:
  redis_data:
  postgres_data:
  mongodb_data:

networks:
  finance-network:
    driver: bridge